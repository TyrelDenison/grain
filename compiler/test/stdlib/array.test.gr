import Array from 'array'

let arr = [> 1, 2, 3]

# Array.get

assert Array.get(1, arr) == 2
assert Array.get(-1, arr) == 3
assert Array.get(-2, arr) == 2
assert Array.get(0, arr) == 1

# Array.set

let arr = [> 1, 2]

Array.set(0, 5, arr)
assert arr[0] == 5
Array.set(-1, 5, arr)
assert arr[1] == 5

# Array.append

let arr1 = [> 1, 2]
let arr2 = [> 3, 4, 5]

assert Array.append(arr1, arr2) == [> 1, 2, 3, 4, 5]
assert Array.append([>], [>]) == [>]
assert Array.append(arr1, [>]) == arr1
assert Array.append([>], arr1) == arr1

# Array.concat

let arr1 = [> 1, 2]
let arr2 = [>]
let arr3 = [> 3, 4, 5]
let arr4 = [> 6, 7, 8, 9]

assert Array.concat([]) == [>]
assert Array.concat([[>]]) == [>]
assert Array.concat([[>], [>]]) == [>]
assert Array.concat([arr3]) == [> 3, 4, 5]
assert Array.concat([arr1, arr2, arr3, arr4]) == [> 1, 2, 3, 4, 5, 6, 7, 8, 9]

# Array.copy

let arr1 = [>]
let arr2 = [> 1, 2]

assert Array.copy(arr1) == arr1
assert !(Array.copy(arr1) is arr1)

assert Array.copy(arr2) == arr2
assert !(Array.copy(arr2) is arr2)

# Array.forEach

let arr1 = [> 1, 2, 3]
let mut sum = 0

let sentinel = (_n) => {
  sum = 42
}

Array.forEach(sentinel, [>])

assert sum == 0

let addToSum = (n) => {
  sum = sum + n
}

Array.forEach(addToSum, arr1)

assert sum == 6

# Array.forEachi

let arr1 = [> 1, 2, 3]
let mut sum = 0

let sentinel = (_n, _i) => {
  sum = 42
}

Array.forEachi(sentinel, [>])

assert sum == 0

let addToSum = (n, i) => {
  sum = sum + (n * i)
}

Array.forEachi(addToSum, arr1)

assert sum == 8

# Array.toList

assert Array.toList([>]) == []
assert Array.toList([> 1, 2, 3]) == [1, 2, 3]

# Array.fromList

assert Array.fromList([]) == [>]
assert Array.fromList([1, 2, 3]) == [> 1, 2, 3]

# Array.map

assert Array.map(incr, [>]) == [>]
assert Array.map(incr, [> 2, 3, 4]) == [> 3, 4, 5]

# Array.mapi

let numbers = [> 2, 3, 4]
let square = (n, i) => n * numbers[i]

assert Array.mapi(square, [>]) == [>]
assert Array.mapi(square, numbers) == [> 4, 9, 16]

# Array.contains

let arr = [> 1, 2, 3]

assert Array.contains(3, arr)
assert !Array.contains(4, arr)
